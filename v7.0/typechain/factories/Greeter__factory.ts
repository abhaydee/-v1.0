/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xcef90f7d",
        type: "bytes32",
      },
    ],
    name: "c_0xcef90f7d",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000f2238038062000f2283398181016040528101906200003791906200037f565b6200006b7f4ece73abeca391019d1cd102293f770f8e63ba86e78d4db0d411b1554ae17c9160001b6200018b60201b60201c565b6200009f7f12fa63598794a59454dc420dd5bc6f29ec4531906707a7637d9dc3f97065083d60001b6200018b60201b60201c565b620000d37fbf9f7b19a5a55224a8346c8e7a1b5c21cb5148110791a41c89e2979334c9923c60001b6200018b60201b60201c565b6200010360405180606001604052806022815260200162000f0060229139826200018e60201b620003581760201c565b620001377fb759a5330e3e73ae21015bb6eb5872c1c3349169cd5d9c38e6a943b6e915dd9860001b6200018b60201b60201c565b6200016b7fe9266fd1ec366adb1118bdad84cb4262060e5897ba314457ea80b8ebfe17ffac60001b6200018b60201b60201c565b8060009080519060200190620001839291906200025d565b5050620005cc565b50565b620002308282604051602401620001a792919062000405565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200023460201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546200026b90620004f1565b90600052602060002090601f0160209004810192826200028f5760008555620002db565b82601f10620002aa57805160ff1916838001178555620002db565b82800160010185558215620002db579182015b82811115620002da578251825591602001919060010190620002bd565b5b509050620002ea9190620002ee565b5090565b5b8082111562000309576000816000905550600101620002ef565b5090565b6000620003246200031e8462000469565b62000440565b9050828152602081018484840111156200033d57600080fd5b6200034a848285620004bb565b509392505050565b600082601f8301126200036457600080fd5b8151620003768482602086016200030d565b91505092915050565b6000602082840312156200039257600080fd5b600082015167ffffffffffffffff811115620003ad57600080fd5b620003bb8482850162000352565b91505092915050565b6000620003d1826200049f565b620003dd8185620004aa565b9350620003ef818560208601620004bb565b620003fa81620005bb565b840191505092915050565b60006040820190508181036000830152620004218185620003c4565b90508181036020830152620004378184620003c4565b90509392505050565b60006200044c6200045f565b90506200045a828262000527565b919050565b6000604051905090565b600067ffffffffffffffff8211156200048757620004866200058c565b5b6200049282620005bb565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620004db578082015181840152602081019050620004be565b83811115620004eb576000848401525b50505050565b600060028204905060018216806200050a57607f821691505b602082108114156200052157620005206200055d565b5b50919050565b6200053282620005bb565b810181811067ffffffffffffffff821117156200055457620005536200058c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61092480620005dc6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a413686214610046578063cfae321714610062578063ebf9183614610080575b600080fd5b610060600480360381019061005b9190610605565b61009c565b005b61006a61023f565b604051610077919061067f565b60405180910390f35b61009a600480360381019061009591906105dc565b610355565b005b6100c87f1e699baedb0c813576ff6070909f5835ae92ee78a23aaa77a7d983ee7d14fac660001b610355565b6100f47f460296ca57190f92aae2ab28e2f7c46b9ebe6e9a0e3073c6a675d15719b012d660001b610355565b6101207f9ada6be1560f0000804777095e4a9f9da2d82bdb13753715ba9328b912be9ffa60001b610355565b6101cd6040518060600160405280602381526020016108cc6023913960008054610149906107e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610175906107e2565b80156101c25780601f10610197576101008083540402835291602001916101c2565b820191906000526020600020905b8154815290600101906020018083116101a557829003601f168201915b5050505050836103f4565b6101f97f4ca7780e0b24056679e9539a586659feece666ad7c522d7fb24d103df09f89ab60001b610355565b6102257fb09659bf4441a4482a6cbbd1287bd88f7ce6d0a5af588522d31655c48282764860001b610355565b806000908051906020019061023b9291906104bc565b5050565b606061026d7f7630b0b3648d8417a58fab074024f984649c32cf99e35601606657cd74b240d660001b610355565b6102997f31cc88b1ce18298b8cd0b2b819560ba1eae2940990fb40db71d16deeef9faea560001b610355565b6102c57f23af204148524a8784e04bec7832ceedcfd7a0e7a80b31b8a8a652d58a92347a60001b610355565b600080546102d2906107e2565b80601f01602080910402602001604051908101604052809291908181526020018280546102fe906107e2565b801561034b5780601f106103205761010080835404028352916020019161034b565b820191906000526020600020905b81548152906001019060200180831161032e57829003601f168201915b5050505050905090565b50565b6103f0828260405160240161036e9291906106a1565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610493565b5050565b61048e83838360405160240161040c939291906106d8565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610493565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546104c8906107e2565b90600052602060002090601f0160209004810192826104ea5760008555610531565b82601f1061050357805160ff1916838001178555610531565b82800160010185558215610531579182015b82811115610530578251825591602001919060010190610515565b5b50905061053e9190610542565b5090565b5b8082111561055b576000816000905550600101610543565b5090565b600061057261056d84610749565b610724565b90508281526020810184848401111561058a57600080fd5b6105958482856107a0565b509392505050565b6000813590506105ac816108b4565b92915050565b600082601f8301126105c357600080fd5b81356105d384826020860161055f565b91505092915050565b6000602082840312156105ee57600080fd5b60006105fc8482850161059d565b91505092915050565b60006020828403121561061757600080fd5b600082013567ffffffffffffffff81111561063157600080fd5b61063d848285016105b2565b91505092915050565b60006106518261077a565b61065b8185610785565b935061066b8185602086016107af565b610674816108a3565b840191505092915050565b600060208201905081810360008301526106998184610646565b905092915050565b600060408201905081810360008301526106bb8185610646565b905081810360208301526106cf8184610646565b90509392505050565b600060608201905081810360008301526106f28186610646565b905081810360208301526107068185610646565b9050818103604083015261071a8184610646565b9050949350505050565b600061072e61073f565b905061073a8282610814565b919050565b6000604051905090565b600067ffffffffffffffff82111561076457610763610874565b5b61076d826108a3565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b838110156107cd5780820151818401526020810190506107b2565b838111156107dc576000848401525b50505050565b600060028204905060018216806107fa57607f821691505b6020821081141561080e5761080d610845565b5b50919050565b61081d826108a3565b810181811067ffffffffffffffff8211171561083c5761083b610874565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6108bd81610796565b81146108c857600080fd5b5056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a26469706673582212202bd711cf86a28ee4159c8609efd81fa915e8372434739bfff129f48453a26e9064736f6c634300080400334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

export class Greeter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
